
var ARMPreLib = function()
{
var moduleId = "ARMPreLib_c1";
function pr() {}
pr.BuildChildMoviePath = function(pp_url, path, fileExt, destObj)
{
var protoIdx = path.indexOf('://');
if ((protoIdx < 0) || (protoIdx > 10))
{
if (fileExt == "flv")
{
path = path.substring(0, path.lastIndexOf("."))
}
return pp_url + path;
}
else
{
if (fileExt == "flv")
{
var lastIndexOfString = path.lastIndexOf("/") + 1;
var tempStr = path.substring(0, lastIndexOfString);
destObj.externalFlashStreamURL = tempStr;
path = path.substr(lastIndexOfString);
return path.substring(0, path.lastIndexOf("."));
}
}
return path;
}
pr.Extension = function(path)
{
return path.substring(path.lastIndexOf('.') + 1).toLowerCase();
}
pr.GetStreamingUrl = function(atlasObject)
{
if (typeof(atlasObject.stream_path_connect) != "undefined" && atlasObject.stream_path_connect != "%stream_path_connect%")
return atlasObject.stream_path_connect;
else
return atlasObject.streaming_url;
} 
pr.GetChildMoviesPlayPath = function(atlasObject)
{
if (typeof(atlasObject.stream_path_play) != "undefined" && atlasObject.stream_path_play != "%stream_path_play%")
return atlasObject.stream_path_play + atlasObject.advertiserID + "/";
else
return "";
}
function cm() {}
cm.MakeString = function(destObj, atlasObject)
{
var oChildMovies = destObj.childmovies[0];
if (!oChildMovies) return '';
var rv = '';
for (var p in oChildMovies)
{
var tempVar = new String(oChildMovies[p]);
if (tempVar.indexOf(" ") == -1)
{
rv += '&';
var path = tempVar;
var ext = pr.Extension(path);
var url;
switch(ext)
{
case 'flv': url = pr.GetChildMoviesPlayPath(atlasObject); break;
case 'swf': url = tempFilesDir + atlasObject.advertiserID + '/'; break;
default: url = httpConst + atlasObject.ds_path + '/'; break;
}
path = pr.BuildChildMoviePath(url, path, ext, destObj);
rv += p.replace('movie', 'atlasm') + '=' + path;
}
}
return rv.substring(1);
}
function movies() {}
movies.getAdMovieUrl = function(destObj, atlasObject, sMoviePath, AddMovieIndex)
{
var url = sMoviePath + "?" +
"spd=" + destObj.CreativeVersion +
"&destdom=" + location.hostname +
"&ds_path=" + atlasObject.ds_path +
"&xsu=" + destObj.externalFlashStreamURL +
"&su=" + pr.GetStreamingUrl(atlasObject) + destObj.qsChildMovies +
"&AtlasCTR=" + atlasObject.click_url_t + "1";
if (AddMovieIndex)
{
url += "&MovieIndex=" + destObj.movieId;
}
return url;
}
movies.generateMovieId = function()
{
var maxMovieIndex=-1;
for (var i = 0; i < a4eAdsArray.length; i++)
{
if (a4eAdsArray[i].movieId > maxMovieIndex)
{
maxMovieIndex=a4eAdsArray[i].movieId;
}
}
return maxMovieIndex+1;
}
function linkAdToFsCommand(destObj)
{
var targetNode;
if (destObj.adRootElement)
{
targetNode = destObj.adRootElement;
}
else
{
targetNode = document.getElementsByTagName("head")[0];
}
ARMRedirLib.Dom.AddHtmlForAndEventInlineScript(targetNode, 
"auto_orange_DoFSCommand(command, args, " + destObj.movieId + ")", 
destObj.SwfId, 'FSCommand(command,args)');
}
function RmAd(AdParms)
{
this.adParms = AdParms;
AdParms.adObject = this;
this.IframeTag = false;
this.onViewOccurred = false;
this.bFlashFileInitialized = false;
this.idCampaign = AdParms.idCampaign;
this.paid = AdParms.paid;
this.idWebCat = AdParms.idWebCat;
this.idWeb = AdParms.idWeb;
this.RecordNumber = -1; 
this.idCat2Camp = AdParms.idCat2Camp;
this.idMpgMovie = AdParms.idMpgMovie;	
this.movieName=-1;
this.moviedir="";
this.idAdvertisement = -1;
this.paramonload = AdParms.paramonload == "true" ? true : false;
this.minBrowserVersion5 = AdParms.minBrowserVersion5 == "true" ? true : false;
this.paramonscroll = AdParms.paramonscroll == "true" ? true : false;
this.paramhideselect = new Object();
this.paramhideselect["teaser"] = AdParms.paramhideselectteaser == "true" ? true : false;
this.paramhideselect["reminder"] = AdParms.paramhideselectreminder == "true" ? true : false;
this.paramhideselect["main"] = AdParms.paramhideselectmain == "true" ? true : false;
this.paramnoframes = new Object();
this.paramnoframes["teaser"] = AdParms.paramnoframesteaser == "true" ? true : false;
this.paramnoframes["reminder"] = AdParms.paramnoframesreminder == "true" ? true : false;
this.paramnoframes["main"] = AdParms.paramnoframesmain == "true" ? true : false;
this.paramdynamic = AdParms.paramdynamic == "true" ? true : false;
this.paramreminder = AdParms.paramreminder == "true" ? true : false;
this.parammain = AdParms.parammain == "true" ? true : false;
this.paramadserver = AdParms.paramadserver == "true" ? true : false;
this.useAkamai = AdParms.useAkamai == "true" ? true : false;
this.surveyVendorTag = new Object();
this.surveyVendorTag["teaser"] = AdParms.paramdynamiclogicteaser1 + AdParms.paramdynamiclogicteaser2 + AdParms.paramdynamiclogicteaser3 + AdParms.paramdynamiclogicteaser4;
this.surveyVendorTag["reminder"] = AdParms.paramdynamiclogicreminder1 + AdParms.paramdynamiclogicreminder2 + AdParms.paramdynamiclogicreminder3 + AdParms.paramdynamiclogicreminder4;
this.surveyVendorTag["main"] = AdParms.paramdynamiclogicmain1 + AdParms.paramdynamiclogicmain2 + AdParms.paramdynamiclogicmain3 + AdParms.paramdynamiclogicmain4;
this.surveyVendorTagCalled = new Object();
this.surveyVendorTagCalled["teaser"] = false;
this.surveyVendorTagCalled["reminder"] = false;
this.surveyVendorTagCalled["main"] = false;
this.politeDownload = AdParms.impoliteDownload == "true" ? true : false;
this.res_640x480 = AdParms.paramres_640x480 == "true" ? true : false;
this.res_800x600 = AdParms.paramres_800x600 == "true" ? true : false;
this.res_1024x768 = AdParms.paramres_1024x768 == "true" ? true : false;
this.res_1152x864 = AdParms.paramres_1152x864 == "true" ? true : false;
this.res_1280x1024 = AdParms.paramres_1280x1024 == "true" ? true : false;
this.res_1600x1200 = AdParms.paramres_1600x1200 == "true" ? true : false;
this.showAnyResolution = AdParms.showAnyResolution == "true" ? true : false;
this.blContent = AdParms.blContent;
this.a4euserclicks = AdParms.a4euserclicks;
this.locationdata = AdParms.locationdata;
this.phasesNames = new Array("teaser", "reminder", "main");
this.locationParams = new Array("top", "left", "height", "width", "size_method", "location_method", "altoverlay", "anchor");
this.locationInfo = new Object();
this.childmovies = AdParms.childmovies;
this.qsChildMovies = '';
this.endDate = parseInt(AdParms.endDate);
this.startDate = parseInt(AdParms.startDate);
this.endTime = -1;
this.startTime = -1;
this.cap = parseInt(AdParms.cap);
this.freq = parseInt(AdParms.freq);
this.cookieCap = 0;
this.impressionTrackingURL2 = AdParms.impressionTrackingURL2;
this.impressionTrackingURL3 = '';
this.impressionTrackingURL4 = '';
this.clickTrackingURL1 = AdParms.clickTrackingURL1;
this.clickTrackingURL2 = AdParms.clickTrackingURL2;
this.clickTrackingURL3 = '';
this.clickTrackingURL4 = '';
this.impressionTrackingVar1 = AdParms.impressionTrackingVar1;
this.impressionTrackingVar2 = AdParms.impressionTrackingVar2;
this.impressionTrackingVar3 = '';
this.impressionTrackingVar4 = '';
this.clickTrackingVar1 = AdParms.clickTrackingVar1;
this.clickTrackingVar2 = AdParms.clickTrackingVar2;
this.clickTrackingVar3 = '';
this.clickTrackingVar4 = '';
this.cookieName = 'Ad4EverCookie';
this.cookieExists = false;
this.EXPLORER_MIN_VERSION=5;
this.screenResolution=1;
this.blTreeLocation = 0;
this.blTreeLocationToCookie = 0;
this.flashMovieVersionRequired = 5;
var htmlElementsTags = new Array("iframe", "select", "applet");
this.hiddenElementsList = new Object();
for (var i = 0; i < htmlElementsTags.length; i++ )
{
this.hiddenElementsList[htmlElementsTags[i]] = new Array();
}
this.tViewTime = 0;
this.adEnd = false;
this.a4e_ver = 4;
this.status = 0;
this.playStarted = 0;
this.Left=NOT_DEFINED;
this.Top=NOT_DEFINED;
this.Width=NOT_DEFINED;
this.Height=NOT_DEFINED;
this.Size=NOT_DEFINED;
this.Place=NOT_DEFINED;
this.m_Anchor=NOT_DEFINED;
this.bOverlayAlternate=false;
this.computedLeft=NOT_DEFINED;
this.computedTop=NOT_DEFINED;
this.computedWidth=NOT_DEFINED;
this.computedHeight=NOT_DEFINED;
this.a4eexit=false;
this.teasertoclick=0;
this.showtime=0;
this.numofmain=0;
this.addline="";
this.teaserViewTime = 0;
this.reminderViewTime = 0;
this.mainViewTime = 0;
this.parentZIndex = 0;
this.adArrayIndex = -1;
this.sendInfoOnStop = true;
this.emptyCacheMovie = "emptyA4E.ver";
this.alternateOffsetX = 0;
this.alternateOffsetY = 0;
this.lastInteractivityLevel;
this.atlasObject;
this.clicksCount = 0;
this.eventsCount = 0;
this.BXDReported = false;
this.eventCounter = new Object();
this.adCurrentPhase = "teaser";
this.lastEventTimeStamp = 0;
this.bFlashFullyLoaded = false;
this.CreativeVersion = AdParms.version;
if(typeof(oAdsSerializedParams) != "undefined")
{
this.bustedIframe = ARMRedirLib.Iframes.getCrossDomainBustedIframe(oAdsSerializedParams[this.paid]);
}
else
{
this.bustedIframe = ARMRedirLib.Iframes.getCrossDomainBustedIframe(this.paid);
}
this.isFirefox = ARMRedirLib.client.userAgent.isFirefox();
this.Version = AdParms.TopLayerVersion;
if(this.isFirefox)
this.Version = 'ff.' + this.Version;
this.filesDir=AdParms.filesDir;
this.appletHidden = false;
this.appletList = null;
this.selectHidden = false;
this.selectList = null;
this.IFramesHidden = false;
this.IframesList = null;
this.A4ERecordNumber = 0;
this.alternateOffsetIframeLeftOffset = 0;
this.alternateOffsetIframeTopOffset = 0;
this.mouseIn = false; 
if (this.locationdata.length > 0)
{
for (var i = 0; i < this.phasesNames.length; i++)
{
var locInfo = new Object();
for (var j = 0; j < this.locationParams.length; j++)
{
var phaseId = this.locationParams[j];
locInfo[phaseId] = this.locationdata[0][(i * this.locationParams.length) + j];
}
this.locationInfo[this.phasesNames[i]] = locInfo;
}
}
this.adRootElement = this.adParms.adObjectAlt.adRootElement;
this.getAdRootElement = function()
{
if (!this.adRootElement)
{
this.adRootElement = document.getElementsByTagName("body")[0];
}
return this.adRootElement;
}
}
RmAd.prototype.nodes = {
rmObjectWrapper: null,
rmObject: null
};
RmAd.prototype.setRMObjectWrapper = function(node) {
this.nodes.rmObjectWrapper = node;
}
RmAd.prototype.isInDocument = function() {
if(this.nodes.rmObjectWrapper) {
var doc = null;
if(this.nodes.rmObjectWrapper.nodeType == 9) {
var doc = this.nodes.rmObjectWrapper;
} else {
var doc = this.nodes.rmObjectWrapper.ownerDocument;
}
var node = this.nodes.rmObjectWrapper.parentNode;
while(node) {
if(node && (node == doc.documentElement || node == doc.body)) {
var win = (doc.parentWindow) ? doc.parentWindow : doc.defaultView;
if(win && win.top === window.top) return true;
}
node = node.parentNode;
}
return false;
}
return null;
}
function EntryPoint()
{
var moduleId = ARMPreLib.moduleId;
for (var index = 0; index < ARM_rtc.RmAdParms.length; index++)
{
var parms = ARM_rtc.RmAdParms[index];
for (var i = 0; i < parms.mods.length; i++)
{
if (parms.mods[i].moduleId == moduleId)
{
var mod = parms.mods[i];
if (!mod.moduleObject)
mod.moduleObject = ARMPreLib;
if (!mod.moduleInitialized)
{
mod.moduleInitialized = true;
var adObj = new ARMPreLib.RmAd(parms);
if (adIsNotAlreadyRunning(adObj))
{
if (validateA4Ead(adObj))
{
setRecordNumber(adObj);
a4eAdsArray[a4eAdsArray.length] = adObj;
adObj.adArrayIndex = a4eAdsArray.length-1;
adObj.SpanId= "OuterOrange" + adObj.paid;
adObj.SwfId= "orange" + adObj.paid;
adObj.movieId = movies.generateMovieId();
runValidatedAd(adObj);
var contAdPlay = true;
}
}
}
}
}
}
}
return {
moduleId : moduleId,
ChildMovies : cm,
Movies : movies,
LinkAdToFsCommand : linkAdToFsCommand,
RmAd : RmAd,
EntryPoint : EntryPoint
}
}();
if (typeof(ARM_TestMode) == 'undefined')
{
if (typeof(FLASH_EXTENSION) == 'undefined')
{
var TopLayerVURL = "";
var MOVIE_NAME_PLACE = 0, IS_FROM_DEFAULT_DIR = 1, ID_ADVERTISEMENT_PLACE = 2, IMPRESSION = 3, CLICK = 4, INTERACT = 5, OPEN_FORM = 6, ACTION = 7, MOVIE_FLASH_VERSION = 8, IS_AUTO_CONVERTED = 9, ALTERNATE_MOVIE_NAME = 13,IS_ALT_FROM_DEFAULT_DIR = 14, ALTERNATE_CONTENTS_FLASH_VERSION = 16, IS_ALTERNATE_CONTENTS_EXTERNAL = 17, ALTERNATE_MOVIE_URL = 18, STOP_COMMAND_EXISTS = 19, INDEX_LOCATIONARRAY_ARRAY = 20;
var RELATIVE = 0, ABSOLUTE = 1, ABSOLUTE_RELATIVE = 2, NOT_DEFINED = -100000;
var A4Ebrowser='Explorer';
var EXPIREDAYS=999;
var DEFAULT_STRING='A4E';
var DELIMITER='_';
var COOKIE_DELIMITER='a4e_delim';
var A4Eakamai = "";
var httpConst = "http://";
var HTTP_CONST = httpConst;
var httpsConst = "https://";
var FLASH_EXTENSION = "swf";
var a4eAdsArray = new Array();
var sentMessages = new Array();
var lastOnUnLoad = null;
var A4EDLunLoadFunc = null;
}
if (typeof(innerDebugMode) == 'undefined')
{
var innerDebugMode = false;
}
ARMPreLib.EntryPoint();
}
function setRecordNumber(a4eObject)
{
}
function adIsNotAlreadyRunning(destObj)
{
if (a4eAdsArray.length >0)
{
for (var i = 0; i < a4eAdsArray.length; i++)
{
if (a4eAdsArray[i].idWebCat == destObj.idWebCat)
{
if (a4eAdsArray[i].idCampaign == destObj.idCampaign)
{
return false;
}
}
}
}
return true;
}
function validateA4Ead(destObj)
{
destObj.atlasObject = destObj.adParms.adObjectAlt.tplParams;
if (destObj.minBrowserVersion5)
{
destObj.EXPLORER_MIN_VERSION=5.5;
}
var startPoint = destObj.atlasObject.TL_files_path.indexOf("/tl/");
tempFilesDir = destObj.atlasObject.TL_files_path.substring(0, startPoint+3) + "/";
TopLayerVURL = tempFilesDir + "TopLayer." + destObj.Version + ".js";
var appName,appVersion,fappVersion,pos1,pos2,bl,a4e_ver1;
var appVersion = new String(navigator.appVersion);
pos1 = appVersion.indexOf("MSIE");
if (pos1 == -1)
{
destObj.a4e_ver = 6;
}
else
{
fappVersion = new String(appVersion.substring(pos1));
a4e_ver1 = fappVersion.substring(5,8);
destObj.a4e_ver = parseFloat(a4e_ver1);
}
if (destObj.a4e_ver >= destObj.EXPLORER_MIN_VERSION)
{
if (destObj.a4e_ver > 5)
{
destObj.minBrowserVersion5 = true;
}
if ((innerDebugMode) || (ARMRedirLib.ClientCapabilities.checkScreenResolution(destObj)))
{
movieName = getMovieName(destObj.blTreeLocation, destObj);
if (movieName != -1)
{
var tempFlashMovieVersionRequired = destObj.flashMovieVersionRequired;
destObj.emptyCacheMovie = destObj.emptyCacheMovie + tempFlashMovieVersionRequired + "." + FLASH_EXTENSION;
if ((typeof(oAdsSerializedParams) != 'undefined') && (oAdsSerializedParams[destObj.paid] != 'undefined'))
{
destObj.IframeTag = true;
}
destObj.emptyCacheMovie = tempFilesDir + destObj.emptyCacheMovie;
if (!destObj.blContent[destObj.blTreeLocation][IS_FROM_DEFAULT_DIR])
{
tempFilesDir = destObj.atlasObject.ds_path.substring(0,destObj.atlasObject.ds_path.lastIndexOf("/")+1);
}
destObj.moviedir = tempFilesDir + movieName;
return true;
}
}
}
return false;
}
function runValidatedAd(destObj)
{
var loadA4EGlobal = true;
if (typeof(contAdPlay) == 'undefined')
{
var s11= new String("<div  style='position:absolute;visibility:hidden;height:0;width:0;top:0;left:0;'><img src= '' alt= '' name=sendy1 width=0 height=0><img src= '' alt= '' name=sendy2 width=0 height=0><img src= '' alt= '' name=sendy3 width=0 height=0><img src= '' alt= '' name=sendy4 width=0 height=0><img src= '' alt= '' name=sendyVar1 width=0 height=0><img src= '' alt= '' name=sendyVar2 width=0 height=0><img src= '' alt= '' name=sendyVar3 width=0 height=0><img src= '' alt= '' name=sendyVar4 width=0 height=0></div>");
var targetNode = document.getElementsByTagName("body")[0];
ARMRedirLib.Dom.InsertHtmlAfterBegin(targetNode, s11);
lastOnUnLoad = window.onunload;
}
else
{
loadA4EGlobal = false;
}
obtainTrackingFromURL(destObj);
destObj.qsChildMovies = '';	
destObj.fvChildMovies = '';	
var sChildMovies = makeChildMoviesString(destObj);	
if (destObj.blContent[destObj.blTreeLocation][MOVIE_FLASH_VERSION] > 5)
{
destObj.fvChildMovies = '<PARAM NAME=FlashVars value="' + sChildMovies + '">';
}
destObj.qsChildMovies = '&' + sChildMovies;
var tempSWFObjectName = new String(destObj.SwfId);
var tempSWFLayerObjectName = new String(destObj.SpanId);
var cachedSWFMovie = new String(
"<OBJECT classid='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000' ID='" + tempSWFObjectName + "_temp' "+
"name='" + tempSWFObjectName + "_temp' style=\"position:absolute; left:0; top:0; visibility:hidden;\">"+
"<PARAM NAME=movie VALUE='" + getAdMovieUrl(destObj, destObj.moviedir) + "'>" +
destObj.fvChildMovies+
"<PARAM NAME=quality VALUE=high>"+
"<PARAM NAME=bgcolor VALUE=#FFFFFF>"+
"<PARAM NAME=wmode VALUE=transparent>"+
"<PARAM NAME=AllowScriptAccess VALUE=never>"+
"<PARAM NAME=MENU VALUE=false>"+
"<PARAM NAME=PLAY VALUE=false>"+
"<EMBED src='" + getAdMovieUrl(destObj, destObj.moviedir) + "' " +
"quality=high bgcolor=#FFFFFF wmode='transparent' AllowScriptAccess='never' menu='false' play='false' "+
"style=\"position:absolute; left:0; top:0; visibility:hidden; overflow:hidden; z-index:999999;\" "+
"NAME='" + tempSWFObjectName + "_temp' TYPE='application/x-shockwave-flash' >"+
"</EMBED>"+
"</OBJECT>");
var s2 = new String(
"<span id='" + tempSWFLayerObjectName + "' " +
"style=\"position:absolute; overflow:hidden; visibility:visible; left:0; top:0; z-index:999998;\">"+
"<OBJECT classid='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000' "+
"ID='" + tempSWFObjectName + "' name='" + tempSWFObjectName + "' "+
"style=\"position:absolute; left:0; top:0; width:100%;height:100%;visibility:visible; z-index:999999;\">" +
"<PARAM NAME=movie VALUE='" + getAdMovieUrl(destObj, destObj.emptyCacheMovie) + "'>" +
destObj.fvChildMovies+
"<PARAM NAME=quality VALUE=high>"+
"<PARAM NAME=bgcolor VALUE=#FFFFFF>"+
"<PARAM NAME=wmode VALUE=transparent>"+
"<PARAM NAME=AllowScriptAccess VALUE=always>"+
"<PARAM NAME=MENU VALUE=false>"+
"<PARAM NAME=PLAY VALUE=false>"+
"<EMBED src='" + getAdMovieUrl(destObj, destObj.emptyCacheMovie) + "' " +
"quality=high bgcolor=#FFFFFF wmode='transparent' menu='false' play='true' AllowScriptAccess='Always' "+
"style=\"position:absolute; left:0; top:0; visibility:visible; overflow:hidden; z-index:999999;\" "+
"NAME='" + tempSWFObjectName + "' TYPE='application/x-shockwave-flash' >"+
"</EMBED>"+
"</OBJECT>"+
"</span>"+
"<div id='atlasUniqueID' style=\"visibility:hidden;position:absolute;\"></div>");
destObj.impressionTrackingURL1 = destObj.atlasObject.atlas_view_url;
if (!destObj.IframeTag)
{
if (loadA4EGlobal)
{
var targetNode = document.getElementsByTagName("head")[0];
ARMRedirLib.Dom.AddExternalScript(targetNode, TopLayerVURL);
}
}
else
{
var targetNode = document.getElementsByTagName("head")[0];
ARMRedirLib.Dom.AddExternalScript(targetNode, TopLayerVURL);
}
var targetNode = document.getElementsByTagName("body")[0];
ARMRedirLib.Dom.InsertHtmlAfterBegin(targetNode, cachedSWFMovie);
ARMRedirLib.Dom.InsertHtmlAfterBegin(targetNode, s2);
destObj.setRMObjectWrapper(document.getElementById(tempSWFLayerObjectName));
}
function getAdMovieUrl(destObj, sMoviePath)
{
return ARMPreLib.Movies.getAdMovieUrl(destObj, destObj.atlasObject, sMoviePath, true);
}
function makeChildMoviesString(destObj)
{
return ARMPreLib.ChildMovies.MakeString(destObj, destObj.atlasObject);
}
function getMovieName(treeLocation, destObj)
{
var tempName = -1;
var checkName = '';
if ((treeLocation >= 0) & (treeLocation < destObj.blContent.length))
{
tempName = destObj.blContent[treeLocation][MOVIE_NAME_PLACE];
if ((tempName == '') || (tempName == null) || (tempName == 'null'))
{
tempName = -1;
destObj.idAdvertisement = -1;
}
else
{
destObj.idAdvertisement = destObj.blContent[treeLocation][ID_ADVERTISEMENT_PLACE];
try
{
var tempFlashMovieVersionRequired = destObj.blContent[treeLocation][MOVIE_FLASH_VERSION];
if ((tempFlashMovieVersionRequired >3) && (tempFlashMovieVersionRequired < 9))
{
destObj.flashMovieVersionRequired =
destObj.blContent[treeLocation][MOVIE_FLASH_VERSION];
}
}
catch(e)
{
}
}
}
return tempName;
}
function getNewIdUser()
{
var tempId = "";
tempId = new String(Math.round(Math.random()*100000000));
return tempId;
}
function stripString(sString)
{
if ( (sString.charAt(0) == "'" && sString.charAt(sString.length-1) == "'") ||
(sString.charAt(0) == "\"" && sString.charAt(sString.length-1) == "\""))
{
sString = new String(sString.substring(1,sString.length-1));
}
return sString;
}
function obtainTrackingFromURL(destObj)
{
if (destObj.atlasObject.pub_view_url != '' && typeof(destObj.atlasObject.pub_view_url) != 'undefined')
{
destObj.impressionTrackingURL4 = stripString(destObj.atlasObject.pub_view_url);
}
if (destObj.atlasObject.pub_click_url != '' && typeof(destObj.atlasObject.pub_click_url) != 'undefined')
{
destObj.clickTrackingURL4 = stripString(destObj.atlasObject.pub_click_url);
}
}
function initializeAtlasObject(destObj)
{
try
{
var atlasTPLinfo = document.getElementById("atlasTPLinfo" + destObj.paid);
if ((atlasTPLinfo == 'undefined') || (atlasTPLinfo == undefined) || (atlasTPLinfo == null))
{
return false;
}
if (typeof(destObj.atlasObject) != 'object')
{
destObj.atlasObject = new Object();
}
for (var i = 0; i < atlasTPLinfo.length; i++)
{
eval("destObj.atlasObject." + atlasTPLinfo[i].name + "='" + unescape(atlasTPLinfo[i].value) + "';");
}
}
catch(e)
{
return false;
}
return true;
}
